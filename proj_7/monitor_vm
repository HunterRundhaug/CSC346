#!/home/ubuntu/oci-env/bin/python3

import os
import time
import oci
import sys
import sqlite3


def main():

    instance_id = sys.argv[1]
    config = oci.config.from_file("/home/ubuntu/.oci/config/oci_config")
    compute = oci.core.ComputeClient(config)
    x = 0
    
    while x < 200: # run for 10 mins max
        vm_state = compute.get_instance(instance_id).data.lifecycle_state
        x+=1
        time.sleep(3)
        if vm_state == "RUNNING":
            public_ip = getInstanceIp(instance_id, compute, config)
            set_vm_readystate(instance_id, public_ip)
            return

def set_vm_readystate(instance_id, public_ip):
    conn = connectToDB()
    cursor = conn.cursor()
    cursor.execute("UPDATE servers SET ready = 1 WHERE instance_id = ?", (instance_id,))
    if(public_ip != None):
        cursor.execute("UPDATE servers SET ip = ? WHERE instance_id = ?", (public_ip, instance_id))
    conn.commit()
    conn.close()
    return

def connectToDB():
    conn = sqlite3.connect("/usr/lib/cgi-bin/CSC346/proj_7/test.db")
    return conn

def getInstanceIp(instance_id, compute_client, config):
    vnic_attachments = compute_client.list_vnic_attachments(
                compartment_id=config["tenancy"],
                instance_id=instance_id
        ).data
    if(len(vnic_attachments) < 1):
        return None
    vnic_id = vnic_attachments[0].vnic_id
    network_client = oci.core.VirtualNetworkClient(config)
    vnic = network_client.get_vnic(vnic_id).data
    public_ip = vnic.public_ip
    return public_ip

main()



